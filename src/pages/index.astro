---
import BaseLayout from "../layouts/BaseLayout.astro";
import "../styles/index.css";
import { getProgram } from "../scripts/database.ts";
import type { ProgramApiResponseProps } from "../types/databaseTypes";
const program = (await getProgram(
  "hypertrophy"
)) as ProgramApiResponseProps | null;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Astro</title>
    <script src="../scripts/index.ts"></script>
  </head>
  <body>
    <BaseLayout>
      <form x-data="form">
        <fieldset>
          <legend>
            <h3>1RM's</h3>
            <p>Enter 1 rep maxes below.</p>
          </legend>

          <template x-for="input in inputs" :key="input.id">
            <div>
              <label :for="input.id" x-text="`${input.label}(lbs)`"></label>
              <input
                :name="input.id"
                :id="input.id"
                x-model="input.value"
                x-mask="999"
                min="0"
                max="1000"
                required
              />
            </div>
          </template>
        </fieldset>

        <fieldset>
          <legend>
            <h3>Goal, Program</h3>
            <p>Select goal then program below.</p>
          </legend>

          <template x-for="select in selects" :key="select.id">
            <div>
              <label :for="select.id" x-text="select.label"></label>
              <select
                :name="select.id"
                :id="select.id"
                x-model="select.value"
                :disabled="disableSelect(select.id)"
                required
              >
                <option value="">-- Select an option --</option>
                <template x-for="option in select.options" :key="option.value">
                  <option :value="option.value" x-text="option.label"></option>
                </template>
              </select>
            </div>
          </template>
        </fieldset>

        <div class="buttons-container">
          <button type="reset">Reset</button>
          <button
            type="submit"
            :disabled="disableSubmit()"
            @click.prevent="handleSubmit()">Submit</button
          >
        </div>
      </form>

      <div style="margin-top: 32px;">
        <h3>{program?.title}</h3>
        {
          program?.sessions.map((session) => (
            <table style="margin: 16px 0;">
              <caption>{session.day}</caption>
              <thead>
                <tr>
                  <th>Order</th>
                  <th>Exercise</th>
                  <th>SetsxReps</th>
                  <th>Weight</th>
                </tr>
              </thead>

              <tbody>
                {session.workout.map((row) => (
                  <tr>
                    <th>{row.order}</th>
                    <td>{row.exercise}</td>
                    <td>
                      {row.setsxreps.map((sets) => (
                        <span>
                          {sets.set}x{sets.reps}@{sets.load},
                        </span>
                      ))}
                    </td>
                    <td>
                      {row.weights.map((weight) => (
                        <span>{weight},</span>
                      ))}
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          ))
        }
      </div>
    </BaseLayout>
  </body>
</html>
